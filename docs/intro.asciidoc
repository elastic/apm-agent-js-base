[[intro]]
== Introduction

The Elastic APM Real User Monitoring (RUM) JavaScript Agent provides detailed performance metrics and error tracking of your web applications.
It has built-in support for popular platforms and frameworks, and an API for custom instrumentation.

The Agent also supports <<distributed-tracing-guide,distributed tracing>> for all outgoing requests.
This enables you to analyze performance throughout your microservice architecture -- all in one view.

[float]
[[how-it-works]]
=== How does the Agent work?

The RUM Agent automatically instruments the following:

* Page load metrics
* Load time of Static Assets
* API requests (XMLHttpRequest and Fetch)

The agent uses the https://developer.mozilla.org/en-US/docs/Web/API/Navigation_timing_API[Navigation Timing API]
and https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API[Resource Timing API]
available in the browser to instrument the page load performance and static assets load times.

The agent automatically captures all outgoing http requests,
by instrumenting both XHR and Fetch API requests from the webpage to backend servers.

For all transactions, the agent automatically captures <<breakdown-metrics-docs, breakdown metrics>>.

[float]
[[page-load-metrics]]
==== Page load metrics

The RUM agent tries to capture the overall user experience on how the page is loaded/rendered as part of the page load Transaction.
It includes all the dependent resources such as JavaSript, Stylesheets, Images, etc. which are included as part of the page. In addition
to capturing the resource timing information as Spans, the transaction also includes navigation spans that are associated along with the rest
of the captured information to make the waterfall more appealing.

* `Domain lookup` - Duration of the DNS query for the current page (domainLookupEnd - domainLookupStart).

* `Making a connection to the server` - Duration of TCP connection to the server. Includes the TLS negotiation time for HTTPS pages (connectEnd - connectStart).

* `Requesting and receiving the document` - Overall response time of the server including the last byte (responseEnd - requestStart).

* `Parsing the document, executing sync. scripts` - HTML document parsing time including synchronous Stylesheets and Script tags (domInteractive - domLoading).

* `Fire "DOMContentLoaded" event` - Triggered when the browser completed parsing the document. Helpful when there are multiple listeners or logic
is executed (domContentLoadedEventEnd - domContentLoadedEventStart)

* `Fire "load" event` - Trigged when the browser finishes loading its document and depedent resources (loadEventEnd - loadEventStart).


To capture the overall user experience of the page including all of the above information plus additional resource requests that might be
triggered during the execution of dependent resources, the `page-load` transaction duration might not always reflect the 
https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event[Load] event of the browser and can extend beyond the event. 

If you are interested in accurately measuring the duration of load event, the information can be extracted by using 
`Fire load event` Span or from the Transaction marks available as `transaction.marks.agent.domComplete` in the Elasticsearch document.


[float]
[[additional-components]]
=== Additional Components

APM Agents work in conjunction with the {apm-server-ref-v}/index.html[APM Server], {ref}/index.html[Elasticsearch], and {kibana-ref}/index.html[Kibana].
Please view the {apm-overview-ref-v}/index.html[APM Overview] for details on how these components work together.

include::./set-up.asciidoc[]